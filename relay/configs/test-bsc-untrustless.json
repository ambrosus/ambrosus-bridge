{
    "networks": {
        "sideBridgeNetwork": "BSC",
        "AMB": {
            "httpUrl": "https://network.ambrosus-test.io",
            "wsUrl": "wss://network.ambrosus-test.io/ws",
            "contractAddr": "0xa09De74437D2453Df47deF3F5C2d14Cd3f0cF8c0",
            "privateKey": "in env"
        },
        "BSC": {
            "httpUrl": "https://bsc-testnet.nodereal.io/v1/32ada8ed8d834ea3b2afa0a9a035a42c",
            "wsUrl": "wss://bsc-testnet.nodereal.io/ws/v1/32ada8ed8d834ea3b2afa0a9a035a42c",
            "contractAddr": "0x4a69003c355656Acf4860Ff3e7cdd6f37CdC3248",
            "privateKey": "",
            "specificSettings": {
                "filterLogsFromBlock": 23637484,
                "filterLogsLimitBlocks": 4999
            }
        }
    },
    "eventsApi": {
        "baseUrl": "backoffice-api.ambrosus-test.io"
    },
    "submitters": {
        "enable": true,
        "sideToAmb": {
            "variant": "untrustless-mpc",
            "mpc": {
                "isServer": false,
                "meID": "in env",
                "partyIDs": [
                    "master",
                    "Max",
                    "AndreyM"
                ],
                "threshold": 2,
                "serverURL": "ws://95.217.211.229:6555",
                "accessToken": "in env",
                "sharePath": "in env"
            }
        },
        "ambToSide": {
            "variant": "untrustless-mpc",
            "mpc": {
                "isServer": false,
                "meID": "in env",
                "partyIDs": [
                    "master",
                    "Max",
                    "AndreyM"
                ],
                "threshold": 2,
                "serverURL": "ws://95.217.211.229:6455",
                "accessToken": "in env",
                "sharePath": "in env"
            }
        }
    },
    "validityWatchdogs": {
        "enable": true,
        "enableForAmb": true,
        "enableForSide": true,
        "__description__": "user relay for untrustless2 will only check that transfers pushed into side network (eth) are valid"
    },
    "pauseUnpauseWatchdogs": {
        "enable": false
    },
    "triggers": {
        "enable": false
    },
    "unlockers": {
        "enable": false
    },
    "feeApi": {
        "enable": false
    },
    "externalLogger": {
        "telegram": {
            "enable": true,
            "token": "in env",
            "chatId": "-1001753338316"
        }
    },
    "prometheus": {
        "enable": false
    }
}
