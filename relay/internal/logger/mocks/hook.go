// Code generated by MockGen. DO NOT EDIT.
// Source: hook.go

// Package mock_logger is a generated GoMock package.
package mock_logger

import (
	reflect "reflect"

	logger "github.com/ambrosus/ambrosus-bridge/relay/internal/logger"
	gomock "github.com/golang/mock/gomock"
)

// MockHook is a mock of Hook interface.
type MockHook struct {
	ctrl     *gomock.Controller
	recorder *MockHookMockRecorder
}

// MockHookMockRecorder is the mock recorder for MockHook.
type MockHookMockRecorder struct {
	mock *MockHook
}

// NewMockHook creates a new mock instance.
func NewMockHook(ctrl *gomock.Controller) *MockHook {
	mock := &MockHook{ctrl: ctrl}
	mock.recorder = &MockHookMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHook) EXPECT() *MockHookMockRecorder {
	return m.recorder
}

// Log mocks base method.
func (m *MockHook) Log(arg0 *logger.ExtLog) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Log", arg0)
}

// Log indicates an expected call of Log.
func (mr *MockHookMockRecorder) Log(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Log", reflect.TypeOf((*MockHook)(nil).Log), arg0)
}
